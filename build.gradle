plugins {
  id 'io.freefair.lombok' version '8.4'
  id 'java-library'
  id 'maven-publish'
  id 'com.github.ben-manes.versions' version '0.51.0'
  id 'se.patrikerdes.use-latest-versions' version '0.2.18'
}

group = 'net.io_0'
version = "1.8.1"
sourceCompatibility = 17

repositories {
  mavenCentral()
}

ext {
  jacksonVersion = '2.15.2'
  junitVersion = '5.10.2'
}

dependencies {
  implementation 'ch.qos.logback:logback-classic:1.4.14'
  implementation 'commons-validator:commons-validator:1.8.0', {
    exclude group: 'commons-beanutils', module: 'commons-beanutils' // potential security issue
    exclude group: 'commons-digester', module: 'commons-digester'
    exclude group: 'commons-logging', module: 'commons-logging'
  }
  implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
  implementation 'com.pivovarit:throwing-function:1.5.1'
  implementation 'org.jooq:joor:0.9.15'
  testImplementation 'org.skyscreamer:jsonassert:1.5.1'
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
  useJUnitPlatform()
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
    }
  }
}

// disallow release candidates as upgradable versions from stable
dependencyUpdates.configure {
  def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { String kw -> version.toUpperCase().contains(kw) }
    return !stableKeyword && !(version ==~ /^[0-9,.v-]+(-r)?$/)
  }

  rejectVersionIf {
    isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
  }
}
